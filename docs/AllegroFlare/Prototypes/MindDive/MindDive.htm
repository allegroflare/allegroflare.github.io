<!DOCTYPE html>
<head>
<title>AllegroFlare/Prototypes/MindDive/MindDive â€¢ AllegroFlare Game Programming Docs</title>
<style>
*
{
  font-family: 'Arial';
  padding: 0px 0px;
  margin: 0px 0px;
}
#primary_logo
{
  width: 80px;
  float: left;
}
#logo_text
{
  padding-top: 20px;
  font-size: 22px;
  font-weight: bold;
}
#main_nav ul
{
  list-style: none;
}
#main_nav ul li
{
  display: inline-block;
  padding: 10px;
}
#main_nav ul li a
{
  color: white;
}
html
{
}
h1, h2, h3, h4, h5, p
{
  margin-bottom: 20px;
}
table td
{
  padding: 3px 20px;
}
.property
{
  color: blue;
}
.private_property
{
  color: lightblue;
}
.method
{
  color: red;
}
.private_method
{
  color: pink;
}
.dependency
{
  color: green;
}

.component div.property-box
{
  padding: 20px 10px 20px 10px;
  margin: 20px 10px 20px 10px;
  border-radius: 8px;
}

.component .properties
{
  background-color: #dfcfdf;
}

.component .methods
{
  background-color: #cfdfdf;
}

.component .dependencies
{
  background-color: #dfdfcf;
}



.header
{
  background: rgb(204,28,28);
  background: -moz-linear-gradient(175deg, rgba(204,28,28,1) 0%, rgba(176,28,105,1) 100%);
  background: -webkit-linear-gradient(175deg, rgba(204,28,28,1) 0%, rgba(176,28,105,1) 100%);
  background: linear-gradient(175deg, rgba(204,28,28,1) 0%, rgba(176,28,105,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#cc1c1c",endColorstr="#b01c69",GradientType=1);

  color: white;
}
.footer
{
background: rgb(0,0,0);
background: -moz-linear-gradient(172deg, rgba(0,0,0,1) 0%, rgba(122,20,97,1) 100%);
background: -webkit-linear-gradient(172deg, rgba(0,0,0,1) 0%, rgba(122,20,97,1) 100%);
background: linear-gradient(172deg, rgba(0,0,0,1) 0%, rgba(122,20,97,1) 100%);
filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#000000",endColorstr="#7a1461",GradientType=1);

  height: 200px;
  color: white;
  font-weight: bold;
}
.footer a
{
  color: white;
}






/* grid container */
.holy-grail-grid {
    display:grid;
    grid-template-areas:
        'header'
        'main-content'
        'left-sidebar'
        'right-sidebar'
        'footer';
}

/* general column padding */
.holy-grail-grid > * {
    padding:1rem;
}

/* assign columns to grid areas */
.holy-grail-grid > .header {
    grid-area:header;
}
.holy-grail-grid > .main-content {
    grid-area:main-content;
}
.holy-grail-grid > .left-sidebar {
    grid-area:left-sidebar;
}
.holy-grail-grid > .right-sidebar {
    grid-area:right-sidebar;
}
.holy-grail-grid > .footer {
    grid-area:footer;
}

/* tablet breakpoint */
@media (min-width:768px) {
    .holy-grail-grid {
        grid-template-columns: 1fr 1fr;
        grid-template-areas:
            'header header'
            'main-content main-content'
            'left-sidebar right-sidebar'
            'footer footer';
    }
}

/* desktop breakpoint */
@media (min-width:1024px) {
    .holy-grail-grid {
        grid-template-columns: repeat(4, 1fr);
        grid-template-areas:
            'header header header header'
            'left-sidebar main-content main-content right-sidebar'
            'footer footer footer footer';
    }
}







</style>
</head>

<body>
<div class="holy-grail-grid">
  <header class="header">
    <a href="https://www.allegroflare.org"/><img id="primary_logo" src="https://cdn.shopify.com/s/files/1/0557/4495/4531/files/allegro-flare-logo-white-01.png?v=1691080699" alt="AllegroFlare" /></a><p><span id="logo_text">AllegroFlare</span><br><span id="logo_subtext"><em>High level objects for Allegro game programming</em></span></p>
    <div id="main_nav">
      <ul>
        <li><a href="https://www.allegroflare.org/docs">Components</a></li>
        <li><a href="https://github.com/allegroflare/allegro_flare">GitHub</a></li>
      </ul>
    </div>
  </header>
<main class="main-content">

<h1>AllegroFlare/Prototypes/MindDive/MindDive</h1><ul>
  <div class="component">
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">event_emitter</td>
  <td class="property">AllegroFlare::EventEmitter*</td>
</tr>
<tr>
  <td class="property">bitmap_bin</td>
  <td class="property">AllegroFlare::BitmapBin*</td>
</tr>
<tr>
  <td class="property">font_bin</td>
  <td class="property">AllegroFlare::FontBin*</td>
</tr>
<tr>
  <td class="property">sample_bin</td>
  <td class="property">AllegroFlare::SampleBin*</td>
</tr>
<tr>
  <td class="property">current_tunnel_mesh</td>
  <td class="property">AllegroFlare::Prototypes::MindDive::TunnelMesh*</td>
</tr>
<tr>
  <td class="property">hypersync</td>
  <td class="property">AllegroFlare::Prototypes::MindDive::Hypersync</td>
</tr>
<tr>
  <td class="property">surfer_position</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">surfer_velocity</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">surfer_accelerator_pressed</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">surfer_break_pressed</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">timer</td>
  <td class="property">AllegroFlare::Timer</td>
</tr>
<tr>
  <td class="property">camera</td>
  <td class="property">AllegroFlare::Camera3D</td>
</tr>
<tr>
  <td class="property">hud</td>
  <td class="property">AllegroFlare::Prototypes::MindDive::Hud::Hud</td>
</tr>
<tr>
  <td class="property">state</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">surfer_attached_to_playhead_track</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">initialized</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">STATE_RACING</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">STATE_WON</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">STATE_PLAYER_DIED</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">STATE_WAITING_START</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">debug_metronome_sound</td>
  <td class="property">AllegroFlare::Sound*</td>
</tr>
<tr>
  <td class="property">music_started_at</td>
  <td class="property">float</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">set_bitmap_bin(AllegroFlare::BitmapBin* bitmap_bin=nullptr)</td>
</tr>
<tr>
  <td class="method">set_sample_bin(AllegroFlare::SampleBin* sample_bin=nullptr)</td>
</tr>
<tr>
  <td class="method">set_font_bin(AllegroFlare::FontBin* font_bin=nullptr)</td>
</tr>
<tr>
  <td class="method">initialize()</td>
</tr>
<tr>
  <td class="private_method">start_timer()</td>
</tr>
<tr>
  <td class="method">pause_timer()</td>
</tr>
<tr>
  <td class="private_method">reset_timer()</td>
</tr>
<tr>
  <td class="private_method">calculate_current_tunnel_mesh_height()</td>
</tr>
<tr>
  <td class="private_method">calculate_current_tunnel_mesh_tile_depth()</td>
</tr>
<tr>
  <td class="method">reset()</td>
</tr>
<tr>
  <td class="method">start_racing()</td>
</tr>
<tr>
  <td class="method">attach_surfer_to_playhead_track()</td>
</tr>
<tr>
  <td class="method">stop_racing_due_to_death()</td>
</tr>
<tr>
  <td class="method">surfer_move_right()</td>
</tr>
<tr>
  <td class="method">surfer_move_left()</td>
</tr>
<tr>
  <td class="method">surfer_press_accelerator()</td>
</tr>
<tr>
  <td class="method">surfer_unpress_accelerator()</td>
</tr>
<tr>
  <td class="method">surfer_press_break()</td>
</tr>
<tr>
  <td class="method">surfer_unpress_break()</td>
</tr>
<tr>
  <td class="method">surfer_stop()</td>
</tr>
<tr>
  <td class="method">surfer_move_horizontal_none()</td>
</tr>
<tr>
  <td class="method">render_tunnel()</td>
</tr>
<tr>
  <td class="method">render_hud()</td>
</tr>
<tr>
  <td class="method">render_surfer()</td>
</tr>
<tr>
  <td class="private_method">evaluate_surfer_past_goal()</td>
</tr>
<tr>
  <td class="method">update()</td>
</tr>
<tr>
  <td class="method">play_around_with_collision_step_result(AllegroFlare::Physics::TileMapCollisionStepperStepResult* step_result=nullptr)</td>
</tr>
<tr>
  <td class="method">render()</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_is_audio_installed&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_audio.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_is_acodec_addon_initialized&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_acodec.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Prototypes::MindDive::TunnelMesh&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Prototypes/MindDive/TunnelMesh.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Vec3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Vec3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Placement3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Placement3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::BitmapBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/BitmapBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Useful&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Useful.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Camera3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Camera3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Elements::Stopwatch&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Elements/Stopwatch.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Timer&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Timer.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;sin&quot;, &quot;headers&quot;=&gt;[&quot;cmath&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;glCullFace&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_opengl.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Prototypes::MindDive::TunnelMeshFactory&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Prototypes/MindDive/TunnelMeshFactory.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Color&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Color.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Prototypes::MindDive::Hud::Hud&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Prototypes/MindDive/Hud/Hud.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Prototypes::MindDive::TunnelMeshSurferCollisionResolver&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Prototypes/MindDive/TunnelMeshSurferCollisionResolver.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Physics::TileMapCollisionStepperStepResult&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Physics/TileMapCollisionStepperStepResult.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::EventEmitter&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/EventEmitter.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Sound&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Sound.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::SampleBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/SampleBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Prototypes::MindDive::Hypersync&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Prototypes/MindDive/Hypersync.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>


    <h3>Sponsor</h3>
<p>Check out <a href="https://clubcatt.com/collections/cat-shirts">cat shirts</a> available from CLUBCATT.</p>

</main>
    <section class="left-sidebar"></section>
    <aside class="right-sidebar"></aside>
    <footer class="footer">

AllegroFlare - Visit us on <a href="https://github.com/allegroflare/allegro_flare">GitHub</a>

    </footer>
</div>
</body>
